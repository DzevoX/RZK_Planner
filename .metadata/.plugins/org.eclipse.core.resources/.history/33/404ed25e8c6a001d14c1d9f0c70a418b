package rzk.beans;

import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.EJB;
import javax.ejb.LocalBean;
import javax.ejb.Stateful;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import model.Event;
import model.EventType;
import model.User;

/**
 * Session Bean implementation class PlannerBean
 */
@Stateful
@LocalBean
public class PlannerBean implements PlannerBeanRemote {

	User user;
	@PersistenceContext
	EntityManager em;

	@EJB
	EventTypeBeanLocal tbl;

	public String login(String email, String password) {
		Query q = em.createQuery("Select u from User u where u.email like :user and u.password like :pass");
		q.setParameter("user", email);
		q.setParameter("pass", password);
		List<User> users = q.getResultList();
		try {
			user = users.get(0);
			return users.get(0).getEmail();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "";
	}

	public PlannerBean() {
		// TODO Auto-generated constructor stub
	}

	@Override
	public boolean createEvent(String desc, Date fromDate, Date toDate, int eventTypeId) {
		if (desc != null && fromDate != null && toDate != null) {
			Query q = em.createQuery("Select e from EventType e where e.id = :id");
			q.setParameter("id", eventTypeId);
			EventType et = (EventType) q.getSingleResult();

			Event newEvent = new Event();
			newEvent.setDescription(desc);
			newEvent.setFromDate(fromDate);
			newEvent.setToDate(toDate);
			newEvent.setEventType(et);
			newEvent.setUser(user);

			em.persist(newEvent);
			return true;
		}
		return false;
	}

	@Override
	public List searchEvents(LocalDate date) {
		Calendar c = Calendar.getInstance();
		c.setTime(date);
		c.add(Calendar.DAY_OF_MONTH, 1);
		Date dateLimit = c.getTime();

		Query q = em.createQuery(
				"Select e from Event e where e.fromDate > :selectDate and e.user = :user and e.fromDate < :limitDate");
		q.setParameter("selectDate", date);
		q.setParameter("user", user);
		q.setParameter("limitDate", dateLimit);

		List<Event> events = q.getResultList();
		return events;
	}

	@Override
	public List getTypes() {
		List<EventType> lista = null;
		lista = tbl.getTypes();
		return lista;
	}

	@PostConstruct
	public void connect() {
		System.out.println("PlannerBean has been created!");
	}

	@PreDestroy
	public void cleanup() {
		System.out.println("PlannerBean has been destroyed!");
	}
}
